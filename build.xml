<?xml version="1.0" encoding="UTF-8"?>

<!--
  PHPTypeSafe

  Copyright (C) 2008  Max Horvath <info@maxhorvath.com>.

  This file is part of PHPTypeSafe.

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  SVN: $Id$
-->

<project name="PHPTypeSafe" default="build" basedir=".">
    <property name="package.name" value="com.maxhorvath.phptypesafe" />
    <property name="base.src.dir" value ="src/main/php" />
    <property name="base.src.test.dir" value ="src/test/php/com/maxhorvath/phptypesafe" />
    <property name="build.dir" value="build" />
    <property name="build.apidoc.dir" value="${build.dir}/api" />
    <property name="build.logs.dir" value="${build.dir}/logs" />
    <property name="build.coverage.dir" value="${build.dir}/coverage" />
    <property name="base.assembly.dir" value ="src/assembly" />
    <property name="lib.dir" value="lib" />
    <property name="lib.phpuc.dir" value="${lib.dir}/phpUnderControl" />
    <property name="lib.phpuc.phpdoc.dir" value="${lib.phpuc.dir}/data/phpdoc" />
    <property name="target.dir" value="bin" />
    <property name="target.dist.dir" value="${target.dir}/dist" />
    <property name="target.dist.extras.dir" value="${target.dist.dir}/extras" />

    <target name="clean" description="Cleaning target folder ...">
        <echo>Cleaning target folder ...</echo>

        <delete dir="${build.dir}" failonerror="false" quiet="true" />
        <delete dir="${target.dir}" failonerror="false" quiet="true" />

        <echo>Done.</echo>
    </target>

    <target name="makebuild" depends="clean" description="Making build folder ...">
        <echo>Making build folder ...</echo>

        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.apidoc.dir}" />
        <mkdir dir="${build.logs.dir}" />
        <mkdir dir="${build.coverage.dir}" />

        <echo>Done.</echo>
    </target>

    <target name="maketarget" depends="clean" description="Making target folder ...">
        <echo>Making target folder ...</echo>

        <mkdir dir="${target.dir}" />

        <echo>Done.</echo>
    </target>

    <target name="makedisttarget" depends="maketarget" description="Making distribution target folder ...">
        <echo>Making distribution target folder ...</echo>

        <mkdir dir="${target.dist.dir}" />
        <mkdir dir="${target.dist.extras.dir}" />

        <echo>Done.</echo>
    </target>

    <target name="unittests" depends="clean" description="Running Unit Tests ...">
        <echo>Running Unit Tests ...</echo>

        <exec executable="phpunit" dir="${base.src.test.dir}" failonerror="true">
            <arg line="--configuration ../../../../../../phpunit.xml
                       --coverage-html ../../../../../../${build.coverage.dir}" />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="codeanalysis" depends="makebuild" description="Running static code analysis ...">
        <echo>Running static code analysis ...</echo>

        <exec executable="phpunit" dir="${base.src.test.dir}" failonerror="false">
            <arg line="--configuration ../../../../../../phpunit.xml
                       --log-xml ../../../../../../${build.logs.dir}/phpunit.xml
                       --log-pmd ../../../../../../${build.logs.dir}/phpunit.pmd.xml
                       --log-metrics ../../../../../../${build.logs.dir}/phpunit.metrics.xml
                       --coverage-xml ../../../../../../${build.logs.dir}/phpunit.coverage.xml" />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="codesniffer" depends="makebuild" description="Analysing source for violations of Coding Conventions ...">
        <echo>Analysing source for violations of Coding Conventions ...</echo>

        <exec executable="phpcs" output="${build.logs.dir}/checkstyle.xml" failonerror="false">
            <arg line="-n
                       --report=checkstyle
                       --standard=Zend
                       ${base.src.dir} ${base.src.test.dir}" />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="codingconventions" description="Analysing source for violations of Coding Conventions ...">
        <echo>Analysing source for violations of Coding Conventions ...</echo>

        <exec executable="phpcs" failonerror="true">
            <arg line="-n
                       --standard=Zend
                       ${base.src.dir} ${base.src.test.dir}" />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="apidoc" depends="makebuild" description="Generating API Documentation ...">
        <echo>Generating API Documentation ...</echo>

        <exec executable="phpdoc" dir="${base.src.dir}" failonerror="false">
            <arg line="-ct type
                       -ue on
                       -pp on
                       -dc PHP
                       -s on
                       -t ../../../${build.apidoc.dir}
                       -o HTML:frames:default
                       -d ." />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="apidoc-phpuc" depends="makebuild" description="Generating API Documentation for phpUnderControl ...">
        <echo>Generating API Documentation ...</echo>

        <exec executable="phpdoc" dir="${base.src.dir}" failonerror="false">
            <arg line="-ct type
                       -ue on
                       -pp on
                       -dc PHP
                       -s on
                       -t ../../../${build.apidoc.dir}
                       -tb ../../../${lib.phpuc.phpdoc.dir}
                       -o HTML:Phpuc:phpuc
                       -d ." />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="build" depends="unittests,maketarget" description="Compiling sources ...">
        <echo>Compiling sources ...</echo>

        <exec executable="php" dir="${base.assembly.dir}" failonerror="true">
            <arg line="assembly.php ../../${target.dir}/${package.name}.phar" />
        </exec>

        <echo>Done.</echo>
    </target>

    <target name="build-apidoc" depends="apidoc,makedisttarget" description="Compiling distribution of API documentation ...">
        <echo>Compiling distribution of API documentation ...</echo>

        <tar destfile="${target.dist.extras.dir}/${package.name}-apidoc.tar.gz"
             basedir="${build.apidoc.dir}"
             longfile="gnu" compression="gzip" />

        <echo>Done.</echo>
    </target>

    <target name="build-testreport" depends="unittests,makedisttarget" description="Compiling distribution of Code Coverage Report ...">
        <echo>Compiling distribution of Code Coverage Report ...</echo>

        <tar destfile="${target.dist.extras.dir}/${package.name}-testreport.tar.gz"
             basedir="${build.coverage.dir}"
             longfile="gnu" compression="gzip" />

        <echo>Done.</echo>
    </target>

    <target name="build-phpuc" depends="codeanalysis,codesniffer,apidoc-phpuc,build" description="Building in phpUnderControl ...">
        <echo>Done.</echo>
    </target>

    <target name="dist" depends="build,build-apidoc,build-testreport" description="Building distribution ...">
        <echo>Building distribution ...</echo>

        <tar destfile="${target.dist.dir}/${package.name}.tar.gz" longfile="gnu" compression="gzip">
            <tarfileset dir="${target.dir}">
                <include name="${package.name}.phar"/>
            </tarfileset>
            <tarfileset dir=".">
                <include name="CHANGELOG"/>
                <include name="COPYING"/>
                <include name="COPYING.LESSER"/>
                <include name="CREDITS"/>
                <include name="LICENSE"/>
                <include name="REQUIREMENTS"/>
            </tarfileset>
        </tar>

        <tar destfile="${target.dist.dir}/${package.name}-full.tar.gz" longfile="gnu" compression="gzip">
            <tarfileset>
                <gzipresource>
                    <file file="${target.dist.dir}/${package.name}.tar.gz" />
                </gzipresource>
            </tarfileset>
            <tarfileset prefix="apidoc">
                <gzipresource>
                    <file file="${target.dist.extras.dir}/${package.name}-apidoc.tar.gz" />
                </gzipresource>
            </tarfileset>
            <tarfileset prefix="testreport">
                <gzipresource>
                    <file file="${target.dist.extras.dir}/${package.name}-testreport.tar.gz" />
                </gzipresource>
            </tarfileset>
        </tar>

        <echo>Done.</echo>
    </target>
</project>